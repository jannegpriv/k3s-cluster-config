apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-ceph-tools
  namespace: rook-ceph
  labels:
    app: rook-ceph-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-ceph-tools
  template:
    metadata:
      labels:
        app: rook-ceph-tools
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: rook-ceph-tools
        image: quay.io/ceph/ceph:v18.2.2
        command: ["/bin/bash"]
        args: ["-c", "# Wait for the Ceph configuration to be available\nwhile [ ! -f /etc/ceph/ceph.conf ]; do\n  echo 'Waiting for Ceph configuration to be available...'\n  \n  # Get monitor endpoints\n  MONS=$(grep -v '^#' /etc/rook/mon-endpoints | sed 's/[,]/\\n/g' | grep ':')\n  \n  # Create initial Ceph configuration\n  if [ ! -z \"$MONS\" ]; then\n    echo '[global]' > /etc/ceph/ceph.conf\n    echo 'mon_host = '$MONS >> /etc/ceph/ceph.conf\n    echo 'auth_cluster_required = cephx' >> /etc/ceph/ceph.conf\n    echo 'auth_service_required = cephx' >> /etc/ceph/ceph.conf\n    echo 'auth_client_required = cephx' >> /etc/ceph/ceph.conf\n    \n    # Create keyring file\n    SECRET=$(cat /etc/ceph/secret)\n    echo '[client.admin]' > /etc/ceph/ceph.client.admin.keyring\n    echo '  key = '$SECRET >> /etc/ceph/ceph.client.admin.keyring\n  fi\n  \n  sleep 5\ndone\n\necho 'Ceph configuration is available.'\n\n# Keep the container running\nwhile true; do\n  sleep 5\ndone"]
        volumeMounts:
        - mountPath: /etc/ceph
          name: ceph-config
        - name: mon-endpoint-volume
          mountPath: /etc/rook
        - name: ceph-secret
          mountPath: /etc/ceph/secret
          subPath: secret
      volumes:
      - name: mon-endpoint-volume
        configMap:
          name: rook-ceph-mon-endpoints
          items:
          - key: data
            path: mon-endpoints
      - name: ceph-config
        emptyDir: {}
      - name: ceph-secret
        secret:
          secretName: rook-ceph-mon
          items:
          - key: ceph-secret
            path: secret
