apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubeshark-alerts
  namespace: monitoring
spec:
  groups:
  - name: kubeshark.rules
    rules:
    # Worker Pod CPU Usage
    - alert: KubesharkWorkerHighCPU
      expr: |
        sum(rate(container_cpu_usage_seconds_total{container=~"kubeshark-worker.*"}[5m])) by (pod) > 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Kubeshark Worker high CPU usage"
        description: "Kubeshark Worker {{ $labels.pod }} has high CPU usage"

    # Worker Pod Memory Usage
    - alert: KubesharkWorkerHighMemory
      expr: |
        sum(container_memory_working_set_bytes{container=~"kubeshark-worker.*"}) by (pod) 
        / sum(container_spec_memory_limit_bytes{container=~"kubeshark-worker.*"}) by (pod) > 0.85
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Kubeshark Worker high memory usage"
        description: "Kubeshark Worker {{ $labels.pod }} is using more than 85% of its memory limit"

    # Master Node Load from Kubeshark Hub
    - alert: KubesharkHubHighLoad
      expr: |
        sum(rate(container_cpu_usage_seconds_total{container=~"kubeshark-hub.*"}[5m])) by (pod) > 0.5
        and
        node_role{role="master"} == 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Kubeshark Hub high load on master node"
        description: "Kubeshark Hub is causing high load on the master node"

    # Network Traffic Volume
    - alert: KubesharkHighTrafficCapture
      expr: |
        rate(kubeshark_captured_packets_total[5m]) > 10000
      for: 5m
      labels:
        severity: info
      annotations:
        summary: "High traffic capture rate"
        description: "Kubeshark is capturing more than 10k packets per second"

  - name: kubeshark.recording
    rules:
    # Average resource usage per worker
    - record: kubeshark:worker:cpu:avg
      expr: avg(rate(container_cpu_usage_seconds_total{container=~"kubeshark-worker.*"}[5m])) by (node)

    - record: kubeshark:worker:memory:avg
      expr: avg(container_memory_working_set_bytes{container=~"kubeshark-worker.*"}) by (node)

    # Traffic capture metrics
    - record: kubeshark:capture:rate
      expr: sum(rate(kubeshark_captured_packets_total[5m])) by (node)
