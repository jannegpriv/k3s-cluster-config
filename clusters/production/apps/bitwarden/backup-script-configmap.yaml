apiVersion: v1
kind: ConfigMap
metadata:
  name: bitwarden-backup-script
  namespace: bitwarden
data:
  backup-script.sh: |
    #!/bin/sh
    set -e

    # Get the Vaultwarden pod name
    VAULTWARDEN_POD=$(kubectl get pod -n bitwarden -l app=bitwarden -o jsonpath='{.items[0].metadata.name}')
    
    # Create a temporary directory for the backup
    BACKUP_DIR="/tmp/vaultwarden-backup"
    mkdir -p $BACKUP_DIR
    
    echo "Creating backup from pod $VAULTWARDEN_POD..."
    
    # Copy SQLite database and attachments from the pod
    kubectl cp bitwarden/$VAULTWARDEN_POD:/data/db.sqlite3 $BACKUP_DIR/db.sqlite3
    kubectl cp bitwarden/$VAULTWARDEN_POD:/data/attachments $BACKUP_DIR/attachments
    
    # Create timestamped archive
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_FILE="vaultwarden_backup_$TIMESTAMP.tar.gz"
    
    cd /tmp
    tar czf $BACKUP_FILE vaultwarden-backup/
    
    # Create SSH config to force port 4711
    echo "Creating SSH config..."
    SSH_CONFIG_DIR="/root/.ssh"
    SSH_CONFIG_FILE="${SSH_CONFIG_DIR}/config"
    mkdir -p "${SSH_CONFIG_DIR}"
    chmod 700 "${SSH_CONFIG_DIR}"
    cat > "${SSH_CONFIG_FILE}" << EOF
Host 192.168.50.25
    Port 4711
EOF
    chmod 600 "${SSH_CONFIG_FILE}"

    # Upload to NAS
    echo "Uploading backup to NAS..."
    export SSHPASS="$NAS_PASSWORD"
    # First ensure directory exists
    sshpass -e ssh -o StrictHostKeyChecking=no jannenasadm@192.168.50.25 "mkdir -p /volume1/k3s_backups/vaultwarden"
    # Then copy the file
    sshpass -e scp -o StrictHostKeyChecking=no $BACKUP_FILE jannenasadm@192.168.50.25:/volume1/k3s_backups/vaultwarden/
    
    # Cleanup
    rm -rf $BACKUP_DIR $BACKUP_FILE
    
    echo "Backup completed successfully!"
