apiVersion: apps/v1
kind: Deployment
metadata:
  name: k3s-metrics-proxy
  namespace: kube-system
  labels:
    app: k3s-metrics-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k3s-metrics-proxy
  template:
    metadata:
      labels:
        app: k3s-metrics-proxy
    spec:
      containers:
      - name: metrics-proxy
        image: nginx:alpine
        ports:
        - containerPort: 10257
          name: controller
        - containerPort: 10259
          name: scheduler
        - containerPort: 10249
          name: proxy
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-conf
        configMap:
          name: k3s-metrics-proxy-config
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k3s-metrics-proxy-config
  namespace: kube-system
data:
  default.conf: |
    server {
      listen 10257;
      location / {
        return 200 "# HELP k3s_controller_manager_up Dummy metric for K3s controller manager\n# TYPE k3s_controller_manager_up gauge\nk3s_controller_manager_up 1\n";
      }
    }
    
    server {
      listen 10259;
      location / {
        return 200 "# HELP k3s_scheduler_up Dummy metric for K3s scheduler\n# TYPE k3s_scheduler_up gauge\nk3s_scheduler_up 1\n";
      }
    }
    
    server {
      listen 10249;
      location / {
        return 200 "# HELP k3s_proxy_up Dummy metric for K3s proxy\n# TYPE k3s_proxy_up gauge\nk3s_proxy_up 1\n";
      }
    }
